
\documentclass{article}
\usepackage{noweb}
\usepackage{listings}
\title{Rust: Hello, world}
\author{Matt Champion}
\date{\today}
\begin{document}
\maketitle

The Rust hello world program, although not as simple as some languages, avoids verbosity.
\section{Writing to standard output}
Writing to standard output can be done using the \emph{print!} macro.
The `!' indicates that it is a macro.

<<write to standard output>>=
println!("Hello, world");
@
\section{Code entry point}
The entry point for the executable is specified with a function called \emph{main}.
Neither arguments nor a return type are required.

<<entry point>>=
fn main() {
    <<write to standard output>>
}
@
\section{Building Rust}
It also benefits from an impressive build system, \emph{cargo}.
Cargo is specified through a manifest file.

<<Cargo.toml>>=
<<package declaration>>
@
The manifest declares some basic properties of the package.

<<package declaration>>=
[package]
name = "hello"
version = "0.1.0"
authors = ["Matt Champion <mattunderscorechampion@gmail.com>"]
@
Cargo expects the entry point to be included in the file \emph{src/main.rs}.

<<src/main.rs>>=
<<entry point>>
@
\section{Source repository}

The source repository is
\begin{lstlisting}
https://github.com/mattunderscorechampion/literate-rust-hello-world
\end{lstlisting}
It can be checked out out using Git.

\end{document}
